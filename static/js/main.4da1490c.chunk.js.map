{"version":3,"sources":["js/login.js","js/acceptedCode.js","Login.js","js/importantWords.js","js/answerQuestions.js","App.js","index.js"],"names":["inputedPassword","login","password","checkLogin","Login","props","submit","state","inputText","newAttempts","attemptsRemaining","setState","incorrectPassword","setInputText","e","target","value","className","type","placeholder","this","onChange","onClick","React","Component","importantWords","garrett","answer","singapore","role","job","promotion","interoperability","Catalyst","abby","kittens","access","alex","bob","buckets","dcf","lunch","jira","pfb","AnVIL","STAGE","answerQuestions","question","toLowerCase","keyword","Object","keys","find","word","includes","App","loggedIn","setInitialQuestion","initialQuestion","askInitialQuestion","initialAnswer","ReactDOM","render","document","getElementById"],"mappings":"qUAEIA,EAAkB,GAETC,EAAQ,SAAAC,GACnBF,EAAkBE,GAGPC,EAAa,iBCRL,eDQWH,GE8CjBI,G,kBAjDb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAQRC,OAAS,WACPL,EAAM,EAAKM,MAAMC,WACjB,IAAMC,EAAc,EAAKF,MAAMG,kBAAoB,EAC9CP,IAMH,EAAKE,MAAMF,aALX,EAAKQ,SAAS,CACZC,mBAAmB,EACnBF,kBAAmBD,KAfN,EAsBnBI,aAAe,SAAAC,GACb,EAAKH,SAAS,CAAEH,UAAWM,EAAEC,OAAOC,SArBpC,EAAKT,MAAQ,CACXC,UAAW,GACXI,mBAAmB,EACnBF,kBAAmB,GALJ,E,sEA0BT,IAAD,OACP,OACE,yBAAKO,UAAU,SACb,2BACEA,UAAU,eACVC,KAAK,OACLC,YAAY,yBACZH,MAAOI,KAAKb,MAAMC,UAClBa,SAAUD,KAAKP,eAEjB,4BAAQI,UAAU,gBAAgBK,QAAS,kBAAM,EAAKhB,WAAtD,UAIEc,KAAKb,MAAMK,kBACT,mDAA0BQ,KAAKb,MAAMG,kBAArC,wBACA,U,GA3CQa,IAAMC,YCwDXC,EA5DQ,CACrBC,QAAS,CACPC,OAAQ,wGAEVC,UAAW,CACTD,OAAQ,wIAEVE,KAAM,CACJF,OAAQ,+DAEVG,IAAK,CACHH,OAAQ,+DAEVI,UAAW,CACTJ,OAAQ,+DAEVK,iBAAkB,CAChBL,OAAQ,sHAEVM,SAAU,CACRN,OAAQ,qGAEVO,KAAM,CACJP,OAAQ,aAEVQ,QAAS,CACPR,OAAQ,4HAEVS,OAAQ,CACNT,OAAQ,8CAEVU,KAAM,CACJV,OAAQ,iCAEVW,IAAK,CACHX,OAAQ,uEAEVY,QAAS,CACPZ,OAAQ,2DAEVa,IAAK,CACHb,OAAQ,6CAEVc,MAAO,CACLd,OAAQ,iDAEVe,KAAM,CACJf,OAAQ,uBAEVgB,IAAK,CACHhB,OAAQ,sCAEViB,MAAO,CACLjB,OAAQ,mEAEVkB,MAAO,CACLlB,OAAQ,kCC/CGmB,EAPS,SAAAC,GACtBA,EAAWA,EAASC,cACpB,IACMC,EADSC,OAAOC,KAAK1B,GACF2B,KAAK,SAACC,GAAD,OAAUN,EAASO,SAASD,KAC1D,OAAOJ,EAAUxB,EAAewB,GAAStB,OAAS,MCiDrC4B,G,kBAhDb,WAAYlD,GAAQ,IAAD,8BACjB,4CAAMA,KAQRF,WAAa,WACX,EAAKQ,SAAS,CAAE6C,SAAUrD,OAVT,EAanBsD,mBAAqB,SAAA3C,GACnB,EAAKH,SAAS,CAAE+C,gBAAiB5C,EAAEC,OAAOC,SAdzB,EAiBnB2C,mBAAqB,WACnB,IAAIhC,EAASmB,EAAgB,EAAKvC,MAAMmD,iBACxC,EAAK/C,SAAS,CAAEiD,cAAejC,GAAU,YAjBzC,EAAKpB,MAAQ,CACXmD,gBAAiB,GACjBE,cAAe,GACfJ,UAAU,GALK,E,sEAsBT,IAAD,OACP,OACE,yBAAKvC,UAAU,OACb,wDAEEG,KAAKb,MAAMiD,SACT,yBAAKvC,UAAU,8BACb,8BACEA,UAAU,gBACVE,YAAY,gDACZH,MAAOI,KAAKb,MAAMmD,gBAClBrC,SAAUD,KAAKqC,qBAEjB,4BAAQxC,UAAU,cAAcK,QAAS,kBAAM,EAAKqC,uBAApD,aAGA,4BAAKvC,KAAKb,MAAMqD,gBAGlB,kBAAC,EAAD,CAAOzD,WAAYiB,KAAKjB,kB,GA1ClBoB,IAAMC,YCDxBqC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4da1490c.chunk.js","sourcesContent":["import code from './acceptedCode';\n\nlet inputedPassword = '';\n\nexport const login = password => {\n  inputedPassword = password;\n};\n\nexport const checkLogin = () => inputedPassword === code;\n","const acceptedCode = 'definitely';\n\nexport default acceptedCode;\n","import React from 'react';\nimport { login, checkLogin } from './js/login';\nimport './Login.css';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputText: '',\n      incorrectPassword: false,\n      attemptsRemaining: 4,\n    };\n  }\n\n  submit = () => {\n    login(this.state.inputText);\n    const newAttempts = this.state.attemptsRemaining - 1;\n    if (!checkLogin()) {\n      this.setState({\n        incorrectPassword: true,\n        attemptsRemaining: newAttempts,\n      });\n    } else {\n      this.props.checkLogin();\n    }\n  }\n\n  setInputText = e => {\n    this.setState({ inputText: e.target.value });\n  }\n\n  render() {\n    return (\n      <div className='login'>\n        <input\n          className='login__input'\n          type='text'\n          placeholder='Enter password here...'\n          value={this.state.inputText}\n          onChange={this.setInputText}\n        />\n        <button className='login__button' onClick={() => this.submit()}>\n          Submit\n        </button>\n        {\n          this.state.incorrectPassword ?\n            <h3>Incorrect password, { this.state.attemptsRemaining } attempts remaining.</h3>\n          : null\n        }\n      </div>\n    );\n  }\n};\n\nexport default Login;\n","const importantWords = {\n  garrett: {\n    answer: 'Garrett can currently be found curled up in a ball on his office floor. Please stand by for updates.'\n  },\n  singapore: {\n    answer: 'Garrett returned from Singapore on February 12th without any signs of Coronavirus infection. You still should not bother him though.'\n  },\n  role: {\n    answer: 'Garrett doesn\\'t know his role either. Feel free to ask Bob.'\n  },\n  job: {\n    answer: 'Garrett doesn\\'t know his role either. Feel free to ask Bob.'\n  },\n  promotion: {\n    answer: 'Garrett doesn\\'t know his role either. Feel free to ask Bob.'\n  },\n  interoperability: {\n    answer: 'Interoperability is completely overrated. send data with floppy disks. Remember floppy disks... wow, the memories.'\n  },\n  Catalyst: {\n    answer: 'Too busy to fix that BioData Catalyst problem because of the other BioData Catalyst problems, no.'\n  },  \n  abby: {\n    answer: 'Abby who?'\n  },\n  kittens: {\n    answer: 'Kittens are Garretts only true source of happiness. Bring him some. NOTE: He is seriously allergic, so also bring drugs.'\n  },\n  access: {\n    answer: 'I am not the Data Access Committee so, no.'\n  },\n  alex: {\n    answer: 'Leave the poor man alone, no.'\n  },\n  bob: {\n    answer: 'Garrett never knows where Bob is. Bothering him would be fruitless.'\n  },\n  buckets: {\n    answer: 'We\\'re indexing data, please be patient. Ask Alessandro.'\n  },\n  dcf: {\n    answer: 'I am not the Project Manager for DCF, no.'\n  },\n  lunch: {\n    answer: 'I have not eaten lunch yet, please bother me!'\n  },\n  jira: {\n    answer: 'I hate tickets, no.'\n  },\n  pfb: {\n    answer: 'PFB will change the world, but no.'\n  },\n  AnVIL: {\n    answer: 'What is AnVIL? Why is AnVIL? These are the important questions.'\n  },\n  STAGE: {\n    answer: 'Do you mean BioData Catalyst?'\n  }\n};\n\nexport default importantWords;\n","import importantWords from './importantWords';\n\nconst answerQuestions = question => {\n  question = question.toLowerCase();\n  let wordList = Object.keys(importantWords);\n  const keyword = wordList.find((word) => question.includes(word));\n  return keyword ? importantWords[keyword].answer : null;\n};\n\nexport default answerQuestions;\n","import React from 'react';\nimport Login from './Login';\nimport answerQuestions from './js/answerQuestions';\nimport { checkLogin } from './js/login';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialQuestion: '',\n      initialAnswer: '',\n      loggedIn: false,\n    };\n  }\n\n  checkLogin = () => {\n    this.setState({ loggedIn: checkLogin() });\n  }\n\n  setInitialQuestion = e => {\n    this.setState({ initialQuestion: e.target.value });\n  }\n\n  askInitialQuestion = () => {\n    let answer = answerQuestions(this.state.initialQuestion);\n    this.setState({ initialAnswer: answer || 'What? '});\n  }\n\n  render() {\n    return (\n      <div className='app'>\n        <h1>Should I Bother Garrett?</h1>\n        {\n          this.state.loggedIn ?\n            <div className='app__initial-question-area'>\n              <textarea\n                className='app__textarea'\n                placeholder=\"Please type your question for Garrett here...\"\n                value={this.state.initialQuestion}\n                onChange={this.setInitialQuestion}\n              />\n              <button className='app__button' onClick={() => this.askInitialQuestion()}>\n                Should I?\n              </button>\n              <h2>{this.state.initialAnswer}</h2>\n            </div>\n          :\n            <Login checkLogin={this.checkLogin} />\n          }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}